---
- name: Asserting that the RVM binary is present
  stat: path='{{ rvm }}'
  register: rvm_bin

- name: Asserting that the RVM installer is present
  stat: path='{{ rvm_download_path }}/rvm-installer.sh'
  register: rvm_installer

- name: Asserting if and what version of rvm is present
  command: '{{ rvm_bin }} version'
  changed_when: False
  register: rvm_current_version
  when: rvm_bin.stat.exists

- name: Fetching rvm installer
  get_url:
    url: '{{ installer_url }}'
    dest: '{{ rvm_download_path }}/rvm-installer.sh'
    mode: "u=rwx,g=rx,o=r"
  when: not rvm_installer.stat.exists

- name: Importing RVM GPG keys
  command: 'gpg --keyserver {{ gpg_key_server }} --recv-keys {{ gpg_key_id }}'
  when: gpg_key_id != ''
  changed_when: False

- name: Installing rvm
  command: >
    {{ rvm_download_path }}/rvm-installer.sh {{ rvm_release }}
    --path {{ rvm_install_path }} {{ rvm_install_flags }}
  when: not rvm_bin.stat.exists

- name: Updating rvm (If it already exists)
  shell: '{{ rvm }} get {{ rvm_release }} && {{ rvm }} reload'
  changed_when: False
  when: rvm_bin.stat.exists and rvm_check_for_update

- name: Configuring rvm
  command: '{{ rvm }} autolibs {{ rvm_autolib_mode }}'
  when: not rvm_bin.stat.exists
